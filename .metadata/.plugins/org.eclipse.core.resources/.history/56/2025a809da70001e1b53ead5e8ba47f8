/**
 * 
 */

console.log(bnoVal);


async function postCommentToserver(cmtData) {
    //이 펑션 쓸때 밑에 메소드 cmtData(받는값)
    try{
        //try 블록: 예외가 발생할 가능성이 있는 코드를 감싸는 블록입니다. 
        //예외가 발생하면 catch 블록으로 제어가 이동합니다.
        const url="/comment/post";
        //url 상수: 서버로 요청을 보낼 엔드포인트(경로)를 저장하는 상수입니다.
        const config={
            //상수: fetch 요청의 설정을 정의하는 객체입니다.
            // 이 객체에는 요청 방법, 헤더 설정 및 데이터(body)가 포함됩니다.
            method:"post",
            headers: {
                'content-type' : 'application/json; charset=utf-8'
            },
            body:JSON.stringify(cmtData)
        };
        const resp=await fetch(url,config);
        //네트워크 요청을 수행하는 함수로, 서버에 요청을 보내는 역할을 합니다. 
        //await를 사용하여 이 요청이 완료될 때까지 대기합니다.
        const result=await resp.text(); //isOK
        //서버 응답의 내용을 텍스트로 파싱합니다. 이 작업도 await를 사용하여 비동기로 처리되며, 
        //결과를 result 상수에 저장합니다.
        // 주로 서버 응답의 성공 여부를 나타내는 텍스트 데이터를 받습니다.
        return result;
    }catch(error) {
        console.log(error)
    }
}


document.getElementById('cmtPostBtn').addEventListener('click',()=>{
//HTML 문서에서 cmtPostBtn 찾아서 클릭하면 이벤트 발생

console.log("123");
const cmtText=document.getElementById('cmtText').value;
//인풋이면 벨류로 값 떠오기

const cmtWriter=document.getElementById('cmtWriter').innerText;

if(cmtText==""||cmtText==null) {
    alert("댓글입력해줘");
    document.getElementById('cmtText').focus();
    //댓글 입력 필드에 포커스를 줍니다.
    return false;
}else{
    let cmtData={
        bno:bnoVal,
        writer:cmtWriter,
        content:cmtText
    }
    console.log(cmtData);

    postCommentToserver(cmtData).then(result=>{

        console.log(result);

        if(result==1) {
            alert("댓글입력완료");
            getCommentList(bnoVal); 
            //댓글 뿌리는애
                //getCommentList 함수를 호출하여 댓글 목록을 가져오는 것으로 보입니다. 
                //bnoVal은 게시물 번호를 나타내며, 
                //이를 이용하여 해당 게시물에 대한 댓글 목록을 가져올 수 있습니다.
            }
        })
    }
})
