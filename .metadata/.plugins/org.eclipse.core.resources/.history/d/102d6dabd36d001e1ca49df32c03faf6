package com.myweb.www.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.myweb.www.domain.BoardVO;
import com.myweb.www.service.BoardService;

import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/board/*") //경로
@Slf4j
public class BoardController {
	// 폴더명 : board / mapping : board
		//mapping => /board/register
		//목적지 -> /board/register
	
	@Inject
	//주입한다
	private BoardService bsv;
	
	@GetMapping("/register")
	//"/register" 경로로 들어왔을 때 이 메소드가 실행되도록 지정합니다. 
	public String boardRegsterGet() {
		return "/board/register";
		//"/board/register" 문자열을 반환하고 있으므로, 이는 보통 해당 경로에 대한 뷰 템플릿을 나타냅니다.
	}
	
	@PostMapping("/register")
	// POST 방식으로 "/register" 경로로 데이터를 전송하면 이 메소드가 실행됩니다.
	public String register(BoardVO bvo) {
		//"/register" 경로로 들어온 POST 요청을 처리합니다. BoardVO 타입의 객체 bvo를 매개변수로 받습니다. 
		log.info("레지스터 bvo" + bvo);
		int isOK = bsv.register(bvo);		
		return "index";
	}
	
	@GetMapping("/list")
	public String list(Model model, BoardVO bvo) {
		//items="${list }" 쓰려고 model 객체로 보냄
		log.info("리스트 bvo" + bvo);
		
		List<BoardVO> list = bsv.getList(bvo);
		
		model.addAttribute("list", list);
		
		log.info("list list " + list);
		return "/board/list";
	}
	
	@GetMapping("/detail")
	public void detail(Model model, @RequestParam("bno")int bno) {
		log.info("디테일 bno" + bno);
		
		BoardVO bvo = bsv.detail(bno);
		
		model.addAttribute("bvo", bvo);
	}
	
	@GetMapping("/modify")
	public void modify(Model model, @RequestParam("bno")int bno) {
		log.info("수정 bno" + bno);
		
		BoardVO bvo = bsv.detail(bno);
		
		model.addAttribute("bvo", bvo);
	}
	
	@PostMapping("/modify")
	public String postmodify(BoardVO bvo) {
		log.info("modify post bvo" + bvo);
		bsv.postModify(bvo);
		
		return "redirect:/board/list";
	}
	
	
}
